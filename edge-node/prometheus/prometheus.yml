global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  external_labels:
    receive_cluster: "es"

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'node-exporter'
    static_configs:
      - targets: ['localhost:9100']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'

  # - job_name: 'cadvisor'
  #   static_configs:
  #   - targets: ['localhost:10250']

  - job_name: 'postgres'
    static_configs:
      - targets: ['localhost:9187']

remote_write:
  - url: http://thanos-receive-remote.minikube.cloud/api/v1/receive
    metadata_config:
      send: false

  # - job_name: 'quarkus'
  #   metrics_path: '/metrics/prometheus'
  #   scrape_interval: 5s
  #   static_configs:
  #   - targets: ['localhost:8080']
